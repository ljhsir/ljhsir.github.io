<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo+github搭建个人博客]]></title>
    <url>%2F2019%2F08%2F01%2Fhexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[本文将介绍的是如何使用hexo与GitHub搭建一个免费的个人博客，作为学生党和爱好写作人士这篇博文一定会让你有所得，本博客也是基于hexo和GitHub搭建而成，欢迎各位访问。 [TOC] 一、简介Hexo hexo是基于node.js编写而成的一个快速、简洁的静态web框架，该框架使用Markdown解析文章，可以快速生成美观的静态网页。有不了解Markdown语法的同学可以看一下我的这篇博客《Markdown语法总结》。 hexo官方文档 Github GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。Github 二、搭建环境由于博主目前经济拮据买不起某果的产品，所以在这里只介绍在Windows10以及Ubantu16.04下的环境搭建。 1. 安装GitGit 是一个开源的分布式版本控制系统。Git 安装（高手可自行配置） Windows: 直接下载Git安装程序，一路下一步默认安装即可 。Git官网 Ubantu： 命令行输入sudo apt-get install git 2. 安装Node.jshexo是由node.js编写而成的，所以这里需要安装一下node.js。这里hexo需要版本最低为6.9。 安装（高手可自行配置） Windows: 直接下载Git安装程序，一路下一步默认安装即可 。node.js官网 Ubantu： 命令行输入:sudo apt-get install node.js 3. 创建GitHub个人仓库首先，登录到Github（如果没有账号的请先注册一个），然后创建一个个人仓库，仓库名必须是：你的用户名.github.io，正如本网站的jhsir.github.io。 4. 生成并添加密钥到GitHub生成ssh 只有在添加过密钥后，我们的主机才可以远程操作Github中的仓库。 Windows 在你选定的目录下打开git bash，Ubantu打开终端，输入： 12git config --global user.name "yourname"git config --global user.email "youremail" 可以用以下命令检查是否配置正确： 12git config user.namegit cinfig user.email 然后用下面的命令来生成ssh： 1ssh-keygen -t rsa -C "youremail" 接下来找到id_rsa.pub文件，我使用的是Windows10，文件路径是：C:\Users\ljh\\.ssh（仅供参考）。 将ssh添加到GitHub 登陆到Github，点击你的头像选择settings选项 选择SSH and GPG keys 点击New SSH key创建 填写title，并将id_rsa.pub的内容复制到key里面，提交。 5. 安装hexo命令行输入： 1npm install -g hexo-cli 在使用Git进行提交的还需要安装hexo-deployer-git，命令行输入： 1npm install --save hexo-deployer-git 三、 hexo搭建个人博客1. 初始化项目选择或创建一个空目录，在该目录下输入以下命令进行hexo的初始化，创建配置的文件： 12hexo initnpm install 2. 目录结构 .deploy_git ：该目录下是要提交到你的GitHub仓库的静态页面的目录 node_models：该目录下是hexo需要的依赖 public：该目录下是渲染好的静态页面的目录 scaffolds：该目录下是模板文件 source：该目录下是你创建的博文的markdown源文件 themes：该目录下是你需要的主题文件 _config.yml：该文件是对整个hexo博客的配置文件 3. 配置打开_config.yml文件进行如下简单配置（以本站为例）： # Site title: 网站标题（ljhsir’s blog） subtitle: 网站标题 description: 描述（Life is fantastic~） keywords: 关键词（Python Django 爬虫） author: 作则（晓月残风） language: 语言（zh-CN） timezone: 时区 # URL url: （网站链接）https://ljhsir.github.io root: （根）/ permalink: 生成的页面的链接格式，如/2019/6/6/测试/（ :year/:month/:day/:title/） permalink_defaults: 上一选项的默认 # Directory（这里是项目各个文件归类的目录配置） source_dir: source public_dir: public tag_dir: tags archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render: # Deployment #部署 deploy: type: git （上传工具） repo: （上传的仓库） ​ github: https://github.com/ljhsir/ljhsir.github.io.git ​ coding: https://dev.tencent.com/u/ljhsir/p/ljhsir.coding.me/git （这里是我在coding上部署的，没有块需求的可以不用写） branch: master（上传的分支） 4. 撰写及发布博客1. 创建文章在你的项目目录下打开命令行执行： 1hexo new "文章标题" 就会在source/_post下创建一个文章标题.md的文件，你就可以在该文件里面进行创作了。 2. 生成静态网页在你的项目目录下打开命令行执行： 1hexo generate 或者： 1hexo g 就会在public下生成静态页面。 3. 本地预览在你的项目目录下打开命令行执行： 1hexo server 你就可以在本地的浏览器打开http:127.0.0.1:4000或者http:localhost:4000进行预览，如果不满意可以继续更改。 4. 发布博客在你的项目目录下打开命令行执行： 1hexo deploy 或者： 1hexo d 就可以将静态网站发布到GitHub，部分在发布时可能需要GitHub的登录密码。然后你就可以在浏览器输入你的url查看了。 后记由于我也是刚部署完这个，可能在博文中还有些错误或者不足，希望和大家多多交流。QQ群：691070890]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语法总结]]></title>
    <url>%2F2019%2F06%2F28%2Fmarkdown%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[这里是我在学习过程中总结的markdown语法，来源包括菜鸟教程和我看过的一些视频，但是忘记来源了。喜欢的可以看一下！^_^ [TOC] 1[toc] # 生成目录 标题*1. 使用 = 和 - 标记一级和二级标题 * 1234我是一级标题==========我是二级标题---------- 2. 使用#号标记 一个#号克表示一级标题两个# 可表示二级标题 123# 我是一级标题## 我是二级标题### 我是三级标题 段落格式Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。 123456这是一个段落 这是第二段这是一个段落这是第二段 字体Markdown 可以使用以下几种字体： 123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 分隔线可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。也可以在星号或是减号中间插入空格。 123456789**** * ******- - ----------- 删除线如果文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可： 1~~BAIDU.COM~~ 下划线下划线可以通过 HTML 的 标签来实现： 1&lt;u&gt;带下划线文本&lt;/u&gt; 脚注脚注是对文本的补充说明，格式如下： 1[^要注明的文本] 演示： 百度^1 12百度[^1][^1]:国内最大的搜索引擎 列表无序列表 无序列表 无序列表 无序列表 +-*三种符号都可以 有序列表 有序列表 有序列表 有序列表 数字加点就可以 1234567891011### 无序列表* 无序列表+ 无序列表- 无序列表* +-*三种符号都可以### 有序列表1. 有序列表1. 有序列表1. 有序列表1. 数字加点就可以 嵌套列表各级之间符号不同，相隔四个空格，typora快速插入表格 CTRL+t： 云南 昆明 嵩明 … 昭通 巧家 … … 四川 攀枝花 不知道 1234567891011* 云南 + 昆明 - 嵩明 - ... + 昭通 - 巧家 - ... + ...* 四川 - 攀枝花 - 不知道 markdown区块Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号： 123&gt; 第一&gt; 第二&gt; 第三 演示： 第一 第二 第三 区块的嵌套另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推退： 123&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 最外层 第一层嵌套 第二层嵌套 区块中使用列表区块中使用列表实例如下： 123456&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项 显示结果如下： 区块中使用列表 第一项 第二项 第一项 第二项 第三项 列表中使用区块如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。 区块中使用列表实例如下： 1234* 第一项 &gt; 第一一 &gt; 第二二* 第二项 显示结果如下： 第一项 第一一第二二 第二项 markdown代码如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如： 1`printf()` 函数 显示结果如下： printf() 函数 代码区块代码区块使用 4 个空格或者一个制表符（Tab 键）或者`包裹一段代码并指定一种语言（好像空格和制表符不支持个人推荐用 最后一种）。1234```markdown$(document).ready(function () &#123;alert(&apos;RUNOOB&apos;); 12345```javascript$(document).ready(function () &#123; alert('RUNOOB');&#125;);``` 实例如下： 123$(document).ready(function () &#123; alert('RUNOOB');&#125;); 链接链接使用方法如下： 链接使用方法如下： 12345[链接名称](链接地址)或者&lt;链接地址&gt; 示例如下： 百度 或者 https://www.baidu.com 高级链接1234567链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 runoob 作为网址变量 [Baidu][baidu]然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [baidu]: http://www.baidu.com/ Google Baidu 图片Markdown 图片语法格式如下（菜鸟教程为例）： 123456789![alt 属性文本](图片地址)![alt 属性文本](图片地址 "可选标题")高级：这个链接用 1 作为网址变量 [RUNOOB][1]然后在文档的结尾位变量赋值（网址）[1]: http://static.runoob.com/images/runoob-logo.png 高级链接展示： Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 标签。 1&lt;img src="http://static.runoob.com/images/runoob-logo.png" width="50%"&gt; 表格Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。 语法格式如下： 1234| 表头 | 表头 || ---- | ---- || 单元格 | 单元格 || 单元格 | 单元格 | 示例: 表头 表头 单元格 单元格 单元格 单元格 我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 示例: 左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 着重显示重点 1`重点` 添加表情: kissing;:+表情名; 脚注Markdown 高级技巧支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。 目前支持的 HTML 元素有：&lt;kdb&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如： 1使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑 转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符： 12**文本加粗** \*\* 正常显示星号 \*\* 公式当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如： 12345678$$\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 = \begin&#123;vmatrix&#125; \mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\\end&#123;vmatrix&#125;$$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$ 输出结果为：$$\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix}\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \\end{vmatrix}$$]]></content>
      <categories>
        <category>学习总结</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
